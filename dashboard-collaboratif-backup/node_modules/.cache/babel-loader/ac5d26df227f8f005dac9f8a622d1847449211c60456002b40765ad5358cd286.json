{"ast":null,"code":"var _jsxFileName = \"/Users/djsambolebindzi/Documents/AppRegardCrois-/dashboard-collaboratif/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport TaskBoard from \"./components/TaskBoard\";\nimport ContactBoard from \"./components/ContactBoard\";\nimport ProgressDashboard from \"./components/ProgressDashboard\";\n\n// --- Analogies : ---\n// - On imagine le backend comme la \"mairie\" ou le \"registre central\".\n// - Les composants TaskBoard/ContactBoard sont comme des agents qui éditent une fiche locale,\n//   puis la renvoient à la mairie pour validation.\n\n// --- Sauvegarde GitHub ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function saveToGitHub(data, setStatus) {\n  setStatus(\"Envoi sur GitHub...\");\n  try {\n    const res = await axios.post(\"http://localhost:4000/github-save\", data);\n    if (res.data.ok) {\n      setStatus(\"Sauvegardé sur GitHub !\");\n    } else {\n      setStatus(\"Erreur : fallback issue GitHub créé\");\n    }\n  } catch (e) {\n    setStatus(\"Erreur critique lors de la sauvegarde\");\n  }\n}\nconst socket = io(\"http://localhost:4000\");\nfunction App() {\n  _s();\n  const [data, setData] = useState({\n    tasks: [],\n    contacts: [],\n    notes: \"\",\n    progress: 0\n  });\n\n  // Récupère la data initiale au chargement (socket.io)\n  useEffect(() => {\n    socket.on(\"init\", initData => {\n      setData(initData);\n    });\n    socket.on(\"data\", newData => {\n      setData(prev => ({\n        ...prev,\n        ...newData\n      }));\n    });\n    // fetch initial si besoin en backup\n    fetch(\"http://localhost:4000/data\").then(r => r.json()).then(d => setData(prev => ({\n      ...prev,\n      ...d\n    })));\n    return () => {\n      socket.off(\"init\");\n      socket.off(\"data\");\n    };\n  }, []);\n\n  // Ces handlers servent à propager la nouvelle liste complète côté front ET back via socket.io\n  const updateTasks = newTasks => {\n    setData(prev => ({\n      ...prev,\n      tasks: newTasks\n    }));\n    socket.emit(\"update\", {\n      tasks: newTasks\n    });\n  };\n  const updateContacts = newContacts => {\n    setData(prev => ({\n      ...prev,\n      contacts: newContacts\n    }));\n    socket.emit(\"update\", {\n      contacts: newContacts\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard Collaboratif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressDashboard, {\n      tasks: data.tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskBoard, {\n      tasks: data.tasks,\n      onUpdate: updateTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactBoard, {\n      contacts: data.contacts,\n      onUpdate: updateContacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aNt10ddTd6iBOjpX1iZ87dWL+Ak=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","axios","TaskBoard","ContactBoard","ProgressDashboard","jsxDEV","_jsxDEV","saveToGitHub","data","setStatus","res","post","ok","e","socket","App","_s","setData","tasks","contacts","notes","progress","on","initData","newData","prev","fetch","then","r","json","d","off","updateTasks","newTasks","emit","updateContacts","newContacts","children","fileName","_jsxFileName","lineNumber","columnNumber","onUpdate","_c","$RefreshReg$"],"sources":["/Users/djsambolebindzi/Documents/AppRegardCrois-/dashboard-collaboratif/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport TaskBoard from \"./components/TaskBoard\";\nimport ContactBoard from \"./components/ContactBoard\";\nimport ProgressDashboard from \"./components/ProgressDashboard\";\n\n// --- Analogies : ---\n// - On imagine le backend comme la \"mairie\" ou le \"registre central\".\n// - Les composants TaskBoard/ContactBoard sont comme des agents qui éditent une fiche locale,\n//   puis la renvoient à la mairie pour validation.\n\n// --- Sauvegarde GitHub ---\nasync function saveToGitHub(data, setStatus) {\n  setStatus(\"Envoi sur GitHub...\");\n  try {\n    const res = await axios.post(\"http://localhost:4000/github-save\", data);\n    if (res.data.ok) {\n      setStatus(\"Sauvegardé sur GitHub !\");\n    } else {\n      setStatus(\"Erreur : fallback issue GitHub créé\");\n    }\n  } catch (e) {\n    setStatus(\"Erreur critique lors de la sauvegarde\");\n  }\n}\n\nconst socket = io(\"http://localhost:4000\");\n\nfunction App() {\n  const [data, setData] = useState({\n    tasks: [],\n    contacts: [],\n    notes: \"\",\n    progress: 0,\n  });\n\n  // Récupère la data initiale au chargement (socket.io)\n  useEffect(() => {\n    socket.on(\"init\", (initData) => {\n      setData(initData);\n    });\n    socket.on(\"data\", (newData) => {\n      setData((prev) => ({ ...prev, ...newData }));\n    });\n    // fetch initial si besoin en backup\n    fetch(\"http://localhost:4000/data\")\n      .then((r) => r.json())\n      .then((d) => setData((prev) => ({ ...prev, ...d })));\n    return () => {\n      socket.off(\"init\");\n      socket.off(\"data\");\n    };\n  }, []);\n\n  // Ces handlers servent à propager la nouvelle liste complète côté front ET back via socket.io\n  const updateTasks = (newTasks) => {\n    setData((prev) => ({ ...prev, tasks: newTasks }));\n    socket.emit(\"update\", { tasks: newTasks });\n  };\n  const updateContacts = (newContacts) => {\n    setData((prev) => ({ ...prev, contacts: newContacts }));\n    socket.emit(\"update\", { contacts: newContacts });\n  };\n\n  return (\n    <div>\n      <h1>Dashboard Collaboratif</h1>\n      <ProgressDashboard tasks={data.tasks} />\n      <TaskBoard tasks={data.tasks} onUpdate={updateTasks} />\n      <ContactBoard contacts={data.contacts} onUpdate={updateContacts} />\n      {/* Ajoute ici d'autres composants si besoin */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}