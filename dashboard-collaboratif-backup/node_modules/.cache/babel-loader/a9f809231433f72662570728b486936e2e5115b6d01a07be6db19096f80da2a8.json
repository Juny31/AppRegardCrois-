{"ast":null,"code":"var _jsxFileName = \"/Users/djsambolebindzi/Documents/AppRegardCrois-/dashboard-collaboratif/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport TaskBoard from \"./components/TaskBoard\";\nimport ContactBoard from \"./components/ContactBoard\";\nimport ProgressDashboard from \"./components/ProgressDashboard\";\n\n// --- Analogies : ---\n// - On imagine le backend comme la \"mairie\" ou le \"registre central\".\n// - Les composants TaskBoard/ContactBoard sont comme des agents qui éditent une fiche locale,\n//   puis la renvoient à la mairie pour validation.\n\n// --- Sauvegarde GitHub ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function saveToGitHub(data, setStatus) {\n  setStatus(\"Envoi sur GitHub...\");\n  try {\n    const res = await axios.post(\"http://localhost:4000/github-save\", data);\n    if (res.data.ok) {\n      setStatus(\"Sauvegardé sur GitHub !\");\n    } else {\n      setStatus(\"Erreur : fallback issue GitHub créé\");\n    }\n  } catch (e) {\n    setStatus(\"Erreur critique lors de la sauvegarde\");\n  }\n}\nfunction App() {\n  _s();\n  const [data, setData] = useState({\n    tasks: [],\n    contacts: [],\n    notes: \"\",\n    progress: 0\n  });\n  const [githubStatus, setGithubStatus] = useState('');\n\n  // --- Au chargement, on va chercher les données actuelles ---\n  useEffect(() => {\n    fetch('http://localhost:4000/data').then(r => r.json()).then(json => setData(json));\n  }, []);\n\n  // --- Sauvegarde auto sur GitHub toutes les 2 minutes ---\n  useEffect(() => {\n    const interval = setInterval(() => {\n      saveToGitHub(data, setGithubStatus);\n    }, 120000);\n    return () => clearInterval(interval);\n  }, [data]);\n\n  // --- HANDLERS pour TaskBoard et ContactBoard ---\n  // On met à jour sur le serveur (POST /data), puis on MAJ localement à la réponse\n  const updateTasks = async tasks => {\n    const res = await fetch('http://localhost:4000/data', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        tasks\n      })\n    });\n    if (res.ok) {\n      setData(data0 => ({\n        ...data0,\n        tasks\n      }));\n    }\n    // sinon tu pourrais rajouter une gestion d'erreur ici !\n  };\n  const updateContacts = async contacts => {\n    const res = await fetch('http://localhost:4000/data', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        contacts\n      })\n    });\n    if (res.ok) {\n      setData(data0 => ({\n        ...data0,\n        contacts\n      }));\n    }\n  };\n\n  // --- EXPORT JSON (copié-collé de ton code) ---\n  function exportJSON(data) {\n    const blob = new Blob([JSON.stringify(data, null, 2)], {\n      type: \"application/json\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"dashboard-export.json\";\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n\n  // --- Affichage principal ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard Collaboratif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => saveToGitHub(data, setGithubStatus),\n      children: \"Sauvegarder sur GitHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => exportJSON(data),\n      style: {\n        marginLeft: 8\n      },\n      children: \"Exporter en JSON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        marginLeft: 10\n      },\n      children: githubStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressDashboard, {\n      tasks: data.tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskBoard, {\n      tasks: data.tasks,\n      onUpdate: updateTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactBoard, {\n      contacts: data.contacts,\n      onUpdate: updateContacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O4LX4IW9RrKdvXUCAI2S0VZWQUU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","TaskBoard","ContactBoard","ProgressDashboard","jsxDEV","_jsxDEV","saveToGitHub","data","setStatus","res","post","ok","e","App","_s","setData","tasks","contacts","notes","progress","githubStatus","setGithubStatus","fetch","then","r","json","interval","setInterval","clearInterval","updateTasks","method","headers","body","JSON","stringify","data0","updateContacts","exportJSON","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginLeft","onUpdate","_c","$RefreshReg$"],"sources":["/Users/djsambolebindzi/Documents/AppRegardCrois-/dashboard-collaboratif/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport TaskBoard from \"./components/TaskBoard\";\nimport ContactBoard from \"./components/ContactBoard\";\nimport ProgressDashboard from \"./components/ProgressDashboard\";\n\n// --- Analogies : ---\n// - On imagine le backend comme la \"mairie\" ou le \"registre central\".\n// - Les composants TaskBoard/ContactBoard sont comme des agents qui éditent une fiche locale,\n//   puis la renvoient à la mairie pour validation.\n\n// --- Sauvegarde GitHub ---\nasync function saveToGitHub(data, setStatus) {\n  setStatus(\"Envoi sur GitHub...\");\n  try {\n    const res = await axios.post(\"http://localhost:4000/github-save\", data);\n    if (res.data.ok) {\n      setStatus(\"Sauvegardé sur GitHub !\");\n    } else {\n      setStatus(\"Erreur : fallback issue GitHub créé\");\n    }\n  } catch (e) {\n    setStatus(\"Erreur critique lors de la sauvegarde\");\n  }\n}\n\nfunction App() {\n  const [data, setData] = useState({\n    tasks: [],\n    contacts: [],\n    notes: \"\",\n    progress: 0,\n  });\n  const [githubStatus, setGithubStatus] = useState('');\n\n  // --- Au chargement, on va chercher les données actuelles ---\n  useEffect(() => {\n    fetch('http://localhost:4000/data')\n      .then(r => r.json())\n      .then(json => setData(json));\n  }, []);\n\n  // --- Sauvegarde auto sur GitHub toutes les 2 minutes ---\n  useEffect(() => {\n    const interval = setInterval(() => {\n      saveToGitHub(data, setGithubStatus);\n    }, 120000);\n    return () => clearInterval(interval);\n  }, [data]);\n\n  // --- HANDLERS pour TaskBoard et ContactBoard ---\n  // On met à jour sur le serveur (POST /data), puis on MAJ localement à la réponse\n  const updateTasks = async (tasks) => {\n    const res = await fetch('http://localhost:4000/data', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ tasks })\n    });\n    if (res.ok) {\n      setData(data0 => ({ ...data0, tasks }));\n    }\n    // sinon tu pourrais rajouter une gestion d'erreur ici !\n  };\n\n  const updateContacts = async (contacts) => {\n    const res = await fetch('http://localhost:4000/data', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ contacts })\n    });\n    if (res.ok) {\n      setData(data0 => ({ ...data0, contacts }));\n    }\n  };\n\n  // --- EXPORT JSON (copié-collé de ton code) ---\n  function exportJSON(data) {\n    const blob = new Blob([JSON.stringify(data, null, 2)], {\n      type: \"application/json\",\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"dashboard-export.json\";\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n\n  // --- Affichage principal ---\n  return (\n    <div>\n      <h1>Dashboard Collaboratif</h1>\n      <button onClick={() => saveToGitHub(data, setGithubStatus)}>\n        Sauvegarder sur GitHub\n      </button>\n      <button onClick={() => exportJSON(data)} style={{ marginLeft: 8 }}>\n        Exporter en JSON\n      </button>\n      <span style={{ marginLeft: 10 }}>{githubStatus}</span>\n      <ProgressDashboard tasks={data.tasks} />\n      <TaskBoard tasks={data.tasks} onUpdate={updateTasks} />\n      <ContactBoard contacts={data.contacts} onUpdate={updateContacts} />\n      {/* Ajoute ici les autres composants si besoin */}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}