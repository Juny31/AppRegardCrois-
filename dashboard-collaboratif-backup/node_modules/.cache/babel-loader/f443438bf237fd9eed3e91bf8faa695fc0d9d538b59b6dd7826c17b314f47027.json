{"ast":null,"code":"var _jsxFileName = \"/Users/djsambolebindzi/Documents/AppRegardCrois-/dashboard-collaboratif-backup/src/components/InlineEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InlineEdit({\n  value,\n  onSave,\n  type = \"text\",\n  ...props\n}) {\n  _s();\n  const [editing, setEditing] = useState(false);\n  const [temp, setTemp] = useState(value);\n  function handleBlur() {\n    setEditing(false);\n    if (temp !== value) onSave(temp);\n  }\n  function handleKey(e) {\n    if (e.key === \"Enter\" && type !== \"textarea\") handleBlur();\n    if (e.key === \"Escape\") {\n      setEditing(false);\n      setTemp(value);\n    }\n  }\n  if (editing) {\n    if (type === \"textarea\") {\n      return /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: temp,\n        autoFocus: true,\n        onChange: e => setTemp(e.target.value),\n        onBlur: handleBlur,\n        onKeyDown: handleKey,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      value: temp,\n      autoFocus: true,\n      type: type,\n      onChange: e => setTemp(e.target.value),\n      onBlur: handleBlur,\n      onKeyDown: handleKey,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    onClick: () => setEditing(true),\n    style: {\n      cursor: \"pointer\",\n      borderBottom: \"1px dashed #aaa\"\n    },\n    ...props,\n    title: \"Cliquer pour \\xE9diter\",\n    children: value || /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"#aaa\"\n      },\n      children: \"\\u2014\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(InlineEdit, \"x/ErYNfbfoxjZ7ofiXQ7nrgoh3E=\");\n_c = InlineEdit;\nvar _c;\n$RefreshReg$(_c, \"InlineEdit\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InlineEdit","value","onSave","type","props","_s","editing","setEditing","temp","setTemp","handleBlur","handleKey","e","key","autoFocus","onChange","target","onBlur","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","cursor","borderBottom","title","children","color","_c","$RefreshReg$"],"sources":["/Users/djsambolebindzi/Documents/AppRegardCrois-/dashboard-collaboratif-backup/src/components/InlineEdit.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function InlineEdit({ value, onSave, type = \"text\", ...props }) {\n  const [editing, setEditing] = useState(false);\n  const [temp, setTemp] = useState(value);\n\n  function handleBlur() {\n    setEditing(false);\n    if (temp !== value) onSave(temp);\n  }\n  function handleKey(e) {\n    if (e.key === \"Enter\" && type !== \"textarea\") handleBlur();\n    if (e.key === \"Escape\") { setEditing(false); setTemp(value);}\n  }\n\n  if (editing) {\n    if (type === \"textarea\") {\n      return (\n        <textarea\n          value={temp}\n          autoFocus\n          onChange={e => setTemp(e.target.value)}\n          onBlur={handleBlur}\n          onKeyDown={handleKey}\n          {...props}\n        />\n      );\n    }\n    return (\n      <input\n        value={temp}\n        autoFocus\n        type={type}\n        onChange={e => setTemp(e.target.value)}\n        onBlur={handleBlur}\n        onKeyDown={handleKey}\n        {...props}\n      />\n    );\n  }\n  return (\n    <span\n      onClick={() => setEditing(true)}\n      style={{ cursor: \"pointer\", borderBottom: \"1px dashed #aaa\" }}\n      {...props}\n      title=\"Cliquer pour éditer\"\n    >\n      {value || <span style={{ color: \"#aaa\" }}>—</span>}\n    </span>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,UAAUA,CAAC;EAAEC,KAAK;EAAEC,MAAM;EAAEC,IAAI,GAAG,MAAM;EAAE,GAAGC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC7E,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAACI,KAAK,CAAC;EAEvC,SAASS,UAAUA,CAAA,EAAG;IACpBH,UAAU,CAAC,KAAK,CAAC;IACjB,IAAIC,IAAI,KAAKP,KAAK,EAAEC,MAAM,CAACM,IAAI,CAAC;EAClC;EACA,SAASG,SAASA,CAACC,CAAC,EAAE;IACpB,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAIV,IAAI,KAAK,UAAU,EAAEO,UAAU,CAAC,CAAC;IAC1D,IAAIE,CAAC,CAACC,GAAG,KAAK,QAAQ,EAAE;MAAEN,UAAU,CAAC,KAAK,CAAC;MAAEE,OAAO,CAACR,KAAK,CAAC;IAAC;EAC9D;EAEA,IAAIK,OAAO,EAAE;IACX,IAAIH,IAAI,KAAK,UAAU,EAAE;MACvB,oBACEJ,OAAA;QACEE,KAAK,EAAEO,IAAK;QACZM,SAAS;QACTC,QAAQ,EAAEH,CAAC,IAAIH,OAAO,CAACG,CAAC,CAACI,MAAM,CAACf,KAAK,CAAE;QACvCgB,MAAM,EAAEP,UAAW;QACnBQ,SAAS,EAAEP,SAAU;QAAA,GACjBP;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAEN;IACA,oBACEvB,OAAA;MACEE,KAAK,EAAEO,IAAK;MACZM,SAAS;MACTX,IAAI,EAAEA,IAAK;MACXY,QAAQ,EAAEH,CAAC,IAAIH,OAAO,CAACG,CAAC,CAACI,MAAM,CAACf,KAAK,CAAE;MACvCgB,MAAM,EAAEP,UAAW;MACnBQ,SAAS,EAAEP,SAAU;MAAA,GACjBP;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEN;EACA,oBACEvB,OAAA;IACEwB,OAAO,EAAEA,CAAA,KAAMhB,UAAU,CAAC,IAAI,CAAE;IAChCiB,KAAK,EAAE;MAAEC,MAAM,EAAE,SAAS;MAAEC,YAAY,EAAE;IAAkB,CAAE;IAAA,GAC1DtB,KAAK;IACTuB,KAAK,EAAC,wBAAqB;IAAAC,QAAA,EAE1B3B,KAAK,iBAAIF,OAAA;MAAMyB,KAAK,EAAE;QAAEK,KAAK,EAAE;MAAO,CAAE;MAAAD,QAAA,EAAC;IAAC;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEX;AAACjB,EAAA,CAhDuBL,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}